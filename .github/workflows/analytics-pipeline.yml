name: CEX Analytics Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  run-analytics-pipeline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Create necessary directories
      run: |
        mkdir -p data/raw_data
        mkdir -p data/processed_data
        mkdir -p artifacts
    
    - name: Run clustering pipeline
      run: python scripts/clustering/run_clustering_pipeline.py
    
    - name: Prepare cluster datasets
      run: python scripts/clustering/prepare_cluster_datasets.py
    
    - name: Run behavioural volatility feature engineering
      run: python scripts/behavioural_volatility_feature_engineering.py/behavioural_volatility_feature_engineering.py
    
    - name: Run cross domain engagement feature engineering
      run: python scripts/cross_domain_/cross_domain_engagement_feature_engineering.py
    
    - name: Run revenue proxy feature engineering
      run: python scripts/revenue_score/revenue_proxy_feature_engineering.py
    
    - name: Run interaction mode clustering
      run: python scripts/clustering/run_interaction_mode_clustering.py
    
    - name: Run interaction mode median production
      run: python scripts/interaction_mode_score/interaction_mode_median_production_execution.py
    
    - name: Run interaction mode distance execution
      run: python scripts/interaction_mode_score/interaction_mode_distance_execution.py
    
    - name: Run analytic scores merging
      run: python scripts/analytic_scores_merging_execution.py
    
    - name: Run config copy execution
      run: python scripts/artifact_production_execution/config_copy_execution.py
    
    - name: Produce dashboard HTML
      run: python scripts/artifact_production_execution/produce_dashboard_html.py
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: analytics-artifacts-${{ github.run_number }}
        path: artifacts/
        retention-days: 30
    
    - name: Upload logs (if any failures)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: pipeline-logs-${{ github.run_number }}
        path: |
          *.log
          logs/
        retention-days: 7