# Copied from config_behavioural_volatility.yaml
# Model version

# Configuration for Behavioural Volatility Score Feature Engineering
# This configuration controls the calculation of BEHAVIOURAL_VOLATILITY_SCORE

data:
  # Input data paths
  input_path: "data/raw_data/new_raw_data_polygon.csv"
  
  # Output path for processed data with behavioural volatility features
  output_path: "data/processed_data/behavioural_volatility_features.csv"

features:
  # Main score components and their weights
  component_weights:
    financial_volatility: 0.35      # Financial volatility component weight (35%)
    activity_volatility: 0.40       # Activity volatility component weight (40%)
    exploration_volatility: 0.25    # Exploration volatility component weight (25%)
  
  # Activity volatility sub-component weights
  activity_volatility_weights:
    coefficient_of_variance: 0.40   # CV of activity counts (40%)
    variance_ratio: 0.30            # Variance ratio from uniform distribution (30%)
    gini_coefficient: 0.30          # Gini coefficient (30%)
  
  # Score normalization settings
  normalize_score: true             # Normalize final score to [0,1] scale
  normalization_method: "improved"   # Method: "min_max", "z_score", "improved", or "none"
  
  # Improved normalization settings
  improved_normalization:
    financial_volatility:
      method: "robust_scaler"         # Use robust scaling for financial volatility
      apply_percentile_cap: false     # Apply 95th percentile capping (configurable)
      percentile_cap: 95             # Percentile threshold for capping outliers
    activity_volatility:
      method: "zscore"               # Use z-score normalization
      cap_std_devs: 3                # Cap extreme z-scores at ±3 standard deviations
    exploration_volatility:
      method: "log_zscore"           # Use log transformation + z-score normalization
      cap_std_devs: 3                # Cap extreme z-scores at ±3 standard deviations
    final_transformation:
      apply_sqrt: true               # Apply square root to reduce compression
  
  # Advanced options
  include_zero_activity_wallets: true  # Include wallets with no events
  epsilon: 0.00000001                   # Small value to avoid division by zero

# Event columns for activity analysis
activity_events:
  event_columns:
    - "DEX_EVENTS"      # Decentralized Exchange activities
    - "GAMES_EVENTS"    # Gaming and metaverse activities
    - "CEX_EVENTS"      # Centralized Exchange activities  
    - "DAPP_EVENTS"     # Decentralized Application interactions
    - "CHADMIN_EVENTS"  # Chain administration activities
    - "DEFI_EVENTS"     # Decentralized Finance activities
    - "BRIDGE_EVENTS"   # Cross-chain bridge activities
    - "NFT_EVENTS"      # Non-Fungible Token activities
    - "TOKEN_EVENTS"    # Token-related activities
    - "FLOTSAM_EVENTS"  # Miscellaneous/other activities

# Financial volatility calculation
financial_volatility:
  numerator_column: "USD_TRANSFER_STDDEV"    # Standard deviation of transfers
  denominator_column: "AVG_TRANSFER_USD"     # Average transfer amount
  
# Exploration volatility calculation
exploration_volatility:
  diversity_columns:
    - "PROTOCOL_DIVERSITY"
    - "INTERACTION_DIVERSITY"
    - "TOKEN_DIVERSITY"
  activity_rate_column: "TX_PER_MONTH"
  apply_sqrt_transform: true        # Apply square root transformation to intensity

# Metadata for documentation purposes
metadata:
  description: "Behavioural Volatility Score feature engineering for crypto wallet behavioural pattern analysis"
  version: "1.0"
  author: "Tom Davey"
  created_date: "2025-08-05"
  
  # Business rationale for behavioural volatility score
  business_rationale:
    purpose: "Measure wallet behavioural volatility across financial, activity, and exploration dimensions"
    components:
      financial_volatility: "Captures variability in transfer amounts (USD_TRANSFER_STDDEV / AVG_TRANSFER_USD)"
      activity_volatility: "Measures inconsistency in activity patterns across event types using CV, variance ratio, and Gini coefficient"
      exploration_volatility: "Quantifies exploration intensity relative to activity rate using diversity metrics"
    interpretation:
      high_volatility: "Wallet exhibits unpredictable, inconsistent behavioural patterns"
      low_volatility: "Wallet shows stable, consistent behavioural patterns"
      zero_volatility: "Wallet has minimal or uniform activity patterns"
    use_cases:
      - "Risk assessment (high volatility may indicate unpredictable behaviour)"
      - "User segmentation based on behavioural consistency"
      - "Fraud detection (unusual volatility patterns)"
      - "Product recommendations (stable vs volatile users need different approaches)"

